use sysio as io;
use ownership as own;

// This is a simple example for the Entropia Language Ownership

fn main(void): void {
	let a1: i32 = 1;
	let b1: i32 = own::mut_borrow(a1); // a1 is not accessible anymore
	let a2: i32 = 2;
	let b2: i32 = a2; // a2 is still accessible

	let mut a3: i32 = 3; // a3 is mutable
	let b3: i32 = own::borrow(a3); // a3 is still accessible (but as immutable) beacause it is copied as immutable
	let mut a4: i32 = 4;
	let b4: i32 = own::mut_borrow(a4); // a3 is not accessible anymore beacause it is copied as mutable
}