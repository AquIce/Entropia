{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Entropia",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.entropia",
					"match": "//.*"
				},
				{
					"name": "comment.block.entropia",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"operators": {
			"patterns": [
				{ "include": "#arithmetic-operators" },
				{ "include": "#comparison-operators" },
				{ "include": "#logical-operators" },
				{ "include": "#bitwise-operators" },
				{ "include": "#assignment-operators" },
				{ "include": "#other-operators" }
			]
		},
		"arithmetic-operators": {
			"patterns": [
				{
					"name": "keyword.operator.arithmetic.entropia",
					"match": "\\b(?:\\+|-|\\*|/|\\*\\*|%|\\+\\+|--)\\b"
				}
			]
		},
		"comparison-operators": {
			"patterns": [
				{
					"name": "keyword.operator.comparison.entropia",
					"match": "\\b(?:==|!=|<|>|<=|>=)\\b"
				}
			]
		},
		"logical-operators": {
			"patterns": [
				{
					"name": "keyword.operator.logical.entropia",
					"match": "\\b(?:&&|\\|\\||!)\\b"
				}
			]
		},
		"bitwise-operators": {
			"patterns": [
				{
					"name": "keyword.operator.bitwise.entropia",
					"match": "\\b(?:&|\\||\\^|~|<<|>>)\\b"
				}
			]
		},
		"assignment-operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.entropia",
					"match": "\\b(?:=|\\+=|-=|\\*=|/=|%=|\\*=\\*|<<=|>>=|&=|\\|=|\\^=)\\b"
				}
			]
		},
		"other-operators": {
			"patterns": [
				{
					"name": "keyword.operator.other.entropia",
					"match": "\\b(?:\\?|:|\\?\\?)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.entropia",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.entropia",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.entropia",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.entropia",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{ "include": "#integer" },
				{ "include": "#float" }
			]
		},
		"integer": {
			"patterns": [
				{ "include": "#binary" },
				{ "include": "#octal" },
				{ "include": "#decimal" },
				{ "include": "#hexadecimal" }
			]
		},
		"binary": {
			"patterns": [
				{
					"name": "constant.numeric.binary.entropia",
					"match": "\\b0b[01]+\\b"
				}
			]
		},
		"octal": {
			"patterns": [
				{
					"name": "constant.numeric.octal.entropia",
					"match": "\\b0o[0-7]+\\b"
				}
			]
		},
		"decimal": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.entropia",
					"match": "\\b(0d)?[0-9]+\\b"
				}
			]
		},
		"hexadecimal": {
			"patterns": [
				{
					"name": "constant.numeric.hexadecimal.entropia",
					"match": "\\b0x[0-9a-fA-F]+\\b"
				}
			]
		},
		"float": {
			"patterns": [
				{
					"name": "constant.numeric.float.entropia",
					"match": "\\b[0-9]*(\\.[0-9]+)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{ "include": "#control-keywords" },
				{ "include": "#type-keywords" },
				{ "include": "#error-management-keywords" },
				{ "include": "#oop-keywords" },
				{ "include": "#declaration-keywords" },
				{ "include": "#codespaces-keywords" },
				{ "include": "#other-keywords" }
			]
		},
		"control-keywords": {
			"patterns": [
				{
					"name": "keyword.control.entropia",
					"match": "\\b(?:if|else|while|for|return|break|continue|switch|case|default)\\b"
				}
			]
		},
		"type-keywords": {
			"patterns": [
				{
					"name": "keyword.type.entropia",
					"match": "\\b(?:int|float|bool|byte|char|str|auto|fn|auto|void)\\b"
				}
			]
		},
		"error-management-keywords": {
			"patterns": [
				{
					"name": "keyword.error-management.entropia",
					"match": "\\b(?:try|catch|throw)\\b"
				}
			]
		},
		"oop-keywords": {
			"patterns": [
				{
					"name": "keyword.oop.entropia",
					"match": "\\b(?:class|interface|extends|implements|constructor|destructor|new|this|super|@private|@public|@protected)\\b"
				}
			]
		},
		"declaration-keywords": {
			"patterns": [
				{
					"name": "keyword.declaration.entropia",
					"match": "\\b(?:let|mut)\\b"
				}
			]
		},
		"codespaces-keywords": {
			"patterns": [
				{
					"name": "keyword.codespaces.entropia",
					"match": "\\b(?:codespace|use|from|as|uses)\\b"
				}
			]
		},
		"other-keywords": {
			"patterns": [
				{
					"name": "keyword.other.entropia",
					"match": "\\b(?:import|package|module|use|as|from|export|public|private|protected|static|final|const|let|var|true|false|null|undefined|NaN|Infinity|void)\\b"
				}
			]
		}
	},
	"scopeName": "source.entropia"
}